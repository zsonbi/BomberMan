stages:
  - before
  - build
  - test
  - documentation
  - deploy

# If you are looking for a place where to add 'UNITY_LICENSE_FILE' and other secrets, please visit your project's gitlab page:
# settings > CI/CD > Variables instead
variables:
  BUILD_NAME: BomberMan
  UNITY_ACTIVATION_FILE: ./unity3d.alf
  UNITY_VERSION: "2022.3.16f1"
  IMAGE: unityci/editor # https://hub.docker.com/r/unityci/editor
  IMAGE_VERSION: "3.0.0" # https://github.com/game-ci/docker/releases
  UNITY_DIR: $CI_PROJECT_DIR # this needs to be an absolute path. Defaults to the root of your tree.


image: $IMAGE:$UNITY_VERSION-base-$IMAGE_VERSION

.unity_before_script: &unity_before_script
  before_script:
    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh

.cache: &cache
  cache:
    key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$TEST_PLATFORM"
    paths:
      - $UNITY_DIR/Library/

.license: &license
  rules:
    - if: '$UNITY_LICENSE != null'
      when: always

# run this job when you need to request a license
# you may need to follow activation steps from documentation
get-activation-file:
  rules:
    - if: '$UNITY_LICENSE == null'
      when: manual
  stage: before
  script:
    - chmod +x ./ci/get_activation_file.sh && ./ci/get_activation_file.sh
  artifacts:
    paths:
      - $UNITY_ACTIVATION_FILE
    expire_in: 10 min # Expiring this as artifacts may contain sensitive data and should not be kept public

.test: &test
  stage: test
  <<: *unity_before_script
  <<: *cache
  <<: *license
  script:
    - apt-get update && apt-get install -y default-jre libsaxonb-java
    - chmod +x ./ci/test.sh && ./ci/test.sh
    - saxonb-xslt -s $UNITY_DIR/$TEST_PLATFORM-results.xml -xsl $CI_PROJECT_DIR/ci/nunit-transforms/nunit3-junit.xslt >$UNITY_DIR/$TEST_PLATFORM-junit-results.xml
  artifacts:
    when: always
    paths:
      # This is exported to allow viewing the Coverage Report in detail if needed
      - $UNITY_DIR/$TEST_PLATFORM-coverage/
    reports:
      junit:
        -  $UNITY_DIR/$TEST_PLATFORM-junit-results.xml
        - "$UNITY_DIR/$TEST_PLATFORM-coverage/coverage.xml"
    expire_in: 2 weeks
  coverage: /<Linecoverage>(.*?)</Linecoverage>/
  needs:
    - build-StandaloneLinux64
    - build-StandaloneOSX
    - build-WebGL
    - build-StandaloneWindows64

test-playmode:
  <<: *test
  variables:
    TEST_PLATFORM: playmode
    TESTING_TYPE: JUNIT

test-editmode:
  <<: *test
  variables:
    TEST_PLATFORM: editmode
    TESTING_TYPE: JUNIT

.build: &build
  stage: build
  <<: *unity_before_script
  <<: *cache
  <<: *license
  script:
    - chmod +x ./ci/build.sh && ./ci/build.sh
  artifacts:
    expire_in: 45 min
    paths:
      - $UNITY_DIR/Builds/

build-StandaloneLinux64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneLinux64

build-StandaloneOSX:
  <<: *build
  image: $IMAGE:$UNITY_VERSION-mac-mono-$IMAGE_VERSION
  variables:
    BUILD_TARGET: StandaloneOSX

build-StandaloneWindows64:
  <<: *build
  image: $IMAGE:$UNITY_VERSION-windows-mono-$IMAGE_VERSION
  variables:
    BUILD_TARGET: StandaloneWindows64

build-WebGL:
  <<: *build
  image: $IMAGE:$UNITY_VERSION-webgl-$IMAGE_VERSION
  variables:
    BUILD_TARGET: WebGL
    
doxygen-generate:
  stage: documentation
  image: debian:latest
  before_script:
    # Install Doxygen and dependencies
    - apt-get update && apt-get install -y doxygen graphviz
  script:
    # Generate Doxygen documentation
    - doxygen -v
    - doxygen -u DoxygenConf
    - doxygen ./DoxygenConf
    # Move the generated documentation to the public/docs directory
    - mkdir -p documentation
    - mv ./docs/html/*  documentation
    - ls -la
  allow_failure: true
  artifacts:
    paths:
      - documentation
      - playmode-coverage
    expire_in: 45 min
  needs:
    - job: test-playmode
    - job: test-editmode
      artifacts : true

#Host the documentation instead of the webgl edition of the game
pages:
  image: alpine:latest
  stage: deploy
  dependencies:
    - doxygen-generate

  script:
    - mkdir public
    - mkdir public/docs
    - ls -la
    - mv ./documentation public/documentation
    - mv ./playmode-coverage/Report public/Report
    - mv ./ci/index.html public
    - ls -la public/documentation/

  artifacts:
    paths:
      - public
  only:
    - documentation
    - master
  needs:
    - job: test-playmode
    - job: test-editmode
    - job: doxygen-generate
      artifacts : true

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
